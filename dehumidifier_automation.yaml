blueprint:
  name: "Dehumidifier Control with Solar Logic"
  description: "Humidity + solar-powered control without template errors."
  domain: automation
  input:
    humidity_sensor:
      name: "Humidity Sensor"
      selector:
        entity:
          domain: sensor
          device_class: humidity
    dehumidifier:
      name: "Dehumidifier Switch"
      selector:
        entity:
          domain: switch
    solar_production:
      name: "Solar Production Sensor (W)"
      selector:
        entity:
          domain: sensor
    min_humidity:
      name: "Activate Above (%)"
      default: 55
      selector:
        number:
          min: 30
          max: 80
          step: 5
    max_humidity:
      name: "Deactivate Below (%)"
      default: 45
      selector:
        number:
          min: 30
          max: 80
          step: 5
    min_solar:
      name: "Min Solar to Run (W)"
      default: 200
      selector:
        number:
          min: 0
          max: 1000
          step: 50

trigger:
  - platform: numeric_state
    entity_id: input.humidity_sensor
    above: input.min_humidity
    for:
      minutes: 10  # Anti-short-cycling

condition:
  - condition: and
    conditions:
      - condition: numeric_state
        entity_id: input.humidity_sensor
        above: input.min_humidity
      - condition: numeric_state
        entity_id: input.solar_production
        above: input.min_solar

action:
  - service: switch.turn_on
    target:
      entity_id: input.dehumidifier
  - wait_for_trigger:
      - platform: numeric_state
        entity_id: input.humidity_sensor
        below: input.max_humidity
    timeout: "02:00:00"  # Max runtime
  - service: switch.turn_off
    target:
      entity_id: input.dehumidifier
